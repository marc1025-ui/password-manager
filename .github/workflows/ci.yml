name: Tests et Validation

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  tests:
    name: Tests ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.11"]

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: 📦 Dependencies système (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0
        sudo apt-get install -y libxcb-keysyms1 libxcb-randr0 libxcb-render-util0

    - name: 🔧 Installation
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: 🧪 Tests crypto (tous OS)
      run: |
        python run_tests.py test_crypto

    - name: 🔐 Tests générateur (tous OS)
      run: |
        python run_tests.py test_generator

    - name: 🗄️ Tests stockage (tous OS)
      run: |
        python run_tests.py test_storage

    - name: 🏛️ Tests vault (Linux/Mac uniquement)
      if: matrix.os != 'windows-latest'
      run: |
        python run_tests.py test_vault

    - name: 🏛️ Tests vault Windows (mode spécial)
      if: matrix.os == 'windows-latest'
      env:
        QT_QPA_PLATFORM: offscreen
      run: |
        python ci_tests.py

  security:
    name: Audit sécurité
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Installation
      run: |
        pip install bandit safety
        pip install -e .

    - name: 🔒 Audit Bandit (avec config)
      run: |
        bandit -r core crypto storage ui -c .bandit
      continue-on-error: true  # Ne pas faire échouer pour les avertissements mineurs

    - name: 🛡️ Safety check
      run: |
        safety check --ignore 70612  # Ignorer les vulnérabilités de dev
      continue-on-error: true

  quality:
    name: Qualité code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Installation outils
      run: |
        pip install black ruff

    - name: 🎨 Black check
      run: |
        black --check .

    - name: 🔍 Ruff check
      run: |
        ruff check .
